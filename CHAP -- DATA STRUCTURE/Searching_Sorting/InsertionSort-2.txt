#include<stdio.h>
#include<conio.h>

// Function to perform Insertion Sort
void insertionSort(int arr[], int n) {
    int i, key, j;
    for (i = 1; i < n; i++) {
        key = arr[i];
        j = i - 1;
        // Move elements of arr[0..i-1], that are greater than key, to one position ahead of their current position
        while (j >= 0 && arr[j] > key) {
            arr[j + 1] = arr[j];
            j--;
        }
        arr[j + 1] = key;
    }
}

// Function to print an array
void printArray(int arr[], int n) {
    int i;
    for (i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

// Driver program
int main() {
    int arr[] = {5, 2, 8, 1, 9, 3, 7, 6, 4};
    int n = sizeof(arr) / sizeof(arr[0]);

    printf("Original array: \n");
    printArray(arr, n);

    insertionSort(arr, n);

    printf("Sorted array: \n");
    printArray(arr, n);

    return 0;
}


Output:
Original array: 
5 2 8 1 9 3 7 6 4 
Sorted array: 
1 2 3 4 5 6 7 8 9 


Explanation:
1. The insertionSort function takes an array arr and its size n as input.
2. The outer loop iterates from the second element (i = 1) to the last element (i < n).
3. The inner loop shifts elements greater than the current element (key) to the right.
4. The key is inserted at the correct position.
5. The printArray function displays the array elements.
6. In the main function, an example array is created and sorted using insertionSort.

Time Complexity: O(n^2)
Space Complexity: O(1)